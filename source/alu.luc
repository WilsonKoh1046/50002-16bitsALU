module alu (
  input a[16],
  input b[16],
  input alufn[6],
    
  output alu[16],
  output z,
  output v,
  output n
  ) {
  
  adder add;
  boolean boole;
  compare comp;
  shifter shift;

  always {
    add.a = a;
    add.b = b;
    add.alufn = alufn;
    boole.a = a;
    boole.b = b;
    boole.alufn = alufn;
    comp.alufn = alufn;
    comp.z = add.z;
    comp.v = add.v;
    comp.n = add.n;
    shift.a = a;
    shift.b = b;
    shift.alufn = alufn;
    
    if (alufn[4] == 0 && alufn[5] == 0) {
      alu = add.sum;
    } else if (alufn[4] == 0 && alufn[5] == 1) {
        alu = boole.bool;
    } else if (alufn[4] == 1 && alufn[5] == 0) {
        alu = shift.out;
    } else if (alufn[4] == 1 && alufn[5] == 1) {
        alu = comp.result;
    } else {
        alu = 8b0;
    }
    
    z = add.z;
    v = add.v;
    n = add.n;
  }
}
