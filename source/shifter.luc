module shifter (
    input alufn[6],  
    input a[16],
    input b[16],  
    output result[16]

  ) {
  
  multiplier mul;
  
  always {
  mul.a = a;
  mul.b = b;
  mul.alufn = alufn;
    
    case(alufn[1:0]){       
      b00:                            //bitwise left shift
        result = a << b[3:0];
      b01:                            //bitwise right shift
        result = a >> b[3:0];
      b11:                            //arithmetic bitwise right shift
        result = $signed(a)>>>b[3:0];
      b10:
        result = mul.out;
              
      default: result = 0;          //default


    }
  
  }
}
